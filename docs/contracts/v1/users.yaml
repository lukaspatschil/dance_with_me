userIdOperations:
  get:
    summary: Get a user by id
    tags:
      - user
    parameters:
      - name: userid
        in: path
        required: true
        description: id of the user
        schema:
          type: string
    responses:
      '200':
        description: A JSON object of UserDTO
        content:
          application/json:
            schema:
              $ref: './datatypes/UserDetailDTO.yaml'
      '401':
        $ref: './errors.yaml#/unauthorizedResponse'
      '403':
        $ref: '#/forbiddenResponse'
      '404':
        $ref: '#/userNotFoundResponse'

  patch:
    summary: Update a user
    tags:
      - user
    parameters:
      - name: userid
        in: path
        required: true
        description: id of the user
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            $ref: './datatypes/UserDetailDTO.yaml#/UserDetailProperties'
    responses:
      '200':
        description: A JSON object of UserDTO
        content:
          application/json:
            schema:
              $ref: './datatypes/UserDetailDTO.yaml#/UserDetailDTO'
      '400':
        description: Bad request.
        content:
          application/json:
            schema:
              oneOf:
                - $ref: './errors.yaml#/invalidFieldsSchema'
    '401':
      $ref: './errors.yaml#/unauthorizedResponse'
    '403':
      $ref: '#/forbiddenResponse'
    '404':
      $ref: '#/userNotFoundResponse'

  delete:
    summary: Delete a user by id
    tags:
      - user
    parameters:
      - name: userid
        in: path
        required: true
        description: id of the user to delete
        schema:
          type: string
    responses:
      '204':
        description: The resource was deleted successfully
      '401':
        $ref: './errors.yaml#/unauthorizedResponse'
      '403':
        $ref: '#/forbiddenResponse'
      '404':
        $ref: '#/userNotFoundResponse'

userNotFoundResponse:
  description: The user with the specified ID was not found.
  content:
    application/json:
      schema:
        type: object
        properties:
          error:
            type: string
            enum:
              - not_found
        required:
          - error

forbiddenResponse:
  description: Missing permission to access/change/delete this user.
  content:
    application/json:
      schema:
        type: object
        properties:
          error:
            type: string
            enum:
              - missing_permission
        required:
          - error
