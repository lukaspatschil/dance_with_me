eventOperations:
  get:
    description: Returns all events with the possibility to skip and take a number of events. The events are sorted by their start date first and secondly by their name.
    tags:
      - event
    parameters:
      - in: query
        name: skip
        schema:
          type: integer
          default: 100
        description: The number of items to skip before starting to collect the result set
      - in: query
        name: take
        schema:
          type: integer
          default: 50
        description: The number of items to fetch from the result set
    responses:
      '200':
        description: A JSON array of events
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: './datatypes/EventDTO.yaml'
      '401':
        $ref: './errors.yaml#/unauthorizedResponse'

  post:
    summary: Adds an event
    tags:
      - event
    requestBody:
      content:
        application/json:
          schema:
            $ref: './datatypes/CreateEventDTO.yaml'
    responses:
      '201':
        description: A JSON object of an event
        content:
          application/json:
            schema:
              $ref: './datatypes/EventDTO.yaml'
      '400':
        description: Bad request.
        content:
          application/json:
            schema:
              oneOf:
                - $ref: './errors.yaml#/invalidFieldsSchema'
      '401':
        $ref: './errors.yaml#/unauthorizedResponse'
      '403':
        $ref: '#/forbiddenResponse'

eventIdOperations:
  get:
    summary: Returns a single event
    tags:
      - event
    parameters:
      - name: eventid
        in: path
        required: true
        description: id of the event
        schema:
          type: string
    responses:
      '200':
        description: A JSON object of an event
        content:
          application/json:
            schema:
              $ref: './datatypes/EventDTO.yaml'
      '401':
        $ref: './errors.yaml#/unauthorizedResponse'
      '403':
        $ref: '#/forbiddenResponse'
      '404':
        $ref: '#/eventNotFoundResponse'

  put:
    summary: Replace an event
    tags:
      - event
    parameters:
      - name: eventid
        in: path
        required: true
        description: id of the event
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            $ref: './datatypes/CreateEventDTO.yaml'
    responses:
      '200':
        description: A JSON object of an event
        content:
          application/json:
            schema:
              $ref: './datatypes/EventDTO.yaml'
      '400':
        description: Bad request.
        content:
          application/json:
            schema:
              oneOf:
                - $ref: './errors.yaml#/invalidFieldsSchema'
      '401':
        $ref: './errors.yaml#/unauthorizedResponse'
      '403':
        $ref: '#/forbiddenResponse'
      '404':
        $ref: '#/eventNotFoundResponse'

  delete:
    summary: Deletes an event
    tags:
      - event
    parameters:
      - name: eventid
        in: path
        required: true
        description: id of the event
        schema:
          type: string
    responses:
      '200':
        description: A JSON object of an event
        content:
          application/json:
            schema:
              type: string
      '401':
        $ref: './errors.yaml#/unauthorizedResponse'
      '403':
        $ref: '#/forbiddenResponse'
      '404':
        $ref: '#/eventNotFoundResponse'

eventByLocationOperations:
  get:
    description: Returns all events from a location ordered by their distance, their start date and their name.
    tags:
      - event
    parameters:
      - in: query
        name: skip
        schema:
          type: integer
          default: 100
        description: The number of items to skip before starting to collect the result set
      - in: query
        name: take
        schema:
          type: integer
          default: 50
        description: The number of items to fetch from the result set
      - in: query
        name: latitude
        schema:
          type: number
          example: 48.210033
          minimum: -90
          maximum: 90
        required: true
      - in: query
        name: longitude
        schema:
          type: number
          example: 16.363449
          minimum: -180
          maximum: 180
        required: true
      - in: query
        name: radius
        schema:
          type: number
          example: 500
          minimum: 0
        required: true
    responses:
      '200':
        description: A JSON array of events
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: './datatypes/EventDTO.yaml'
      '400':
        description: Bad request.
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  enum:
                    - invalid_longitude
                    - invalid_latitude
                    - invalid_radius
              required:
                - error
      '401':
        $ref: './errors.yaml#/unauthorizedResponse'

eventNotFoundResponse:
  description: The event with the specified ID was not found.
  content:
    application/json:
      schema:
        type: object
        properties:
          error:
            type: string
            enum:
              - not_found
        required:
          - error

forbiddenResponse:
  description: Missing permission to access/change/delete this event.
  content:
    application/json:
      schema:
        type: object
        properties:
          error:
            type: string
            enum:
              - missing_permission
        required:
          - error
