
eventGetOperation:
  get:
    summary: Returns all events with the possibility to skip and take a number of events. The events are sorted by their start date first and secondly by their name.
    tags:
      - event
    parameters:
      - in: query
        name: skip
        optional: true
        schema:
          type: integer
        description: The numbers of items to return
      - in: query
        name: take
        optional: true
        schema:
          type: integer
        description: The number of items to skip before starting to collect the result set
    responses:
      '200': # status code
        description: A JSON array of events
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: './datatypes/EventDTO.yaml'
      '401':
        description: Not authorizated.
        content:
          application/json:
            schema:
              $ref: './datatypes/errors/Error401.yaml'

eventPostOperation:
  post:
    summary: Adds an event
    tags:
      - event
    requestBody:
      content:
        application/json:
          schema:
            $ref: './datatypes/CreateEventDTO.yaml'
    responses:
      '201':
        description: A JSON object of an event
        content:
          application/json:
            schema:
              $ref: './datatypes/EventDTO.yaml'
      '400':
        description: Bad request.
        content:
          application/json:
            schema:
              $ref: './datatypes/errors/Error400.yaml'
      '401':
        description: Not authorizated.
        content:
          application/json:
            schema:
              $ref: './datatypes/errors/Error401.yaml'
      '403':
        description: User doen't have the needed rights
        content:
          application/json:
            schema:
              $ref: './datatypes/errors/Error403.yaml'

eventIdOperations:
  get:
    summary: Returns a single event
    tags:
      - event
    parameters:
      - name: eventid
        in: path
        required: true
        description: id of the event
        schema:
          type: string
    responses:
      '200':
        description: A JSON object of an event
        content:
          application/json:
            schema:
              $ref: './datatypes/EventDTO.yaml'
      '400':
        description: The specified event id is invalid.
        content:
          application/json:
            schema:
              $ref: './datatypes/errors/Error400.yaml'
      '401':
        description: Not authorizated.
        content:
          application/json:
            schema:
              $ref: './datatypes/errors/Error401.yaml'
      '403':
        description: User doen't have the needed rights
        content:
          application/json:
            schema:
              $ref: './datatypes/errors/Error403.yaml'

  put:
    summary: Updates an event
    tags:
      - event
    parameters:
      - name: eventid
        in: path
        required: true
        description: id of the event
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            $ref: './datatypes/CreateEventDTO.yaml'
    responses:
      '200':
        description: A JSON object of an event
        content:
          application/json:
            schema:
              $ref: './datatypes/EventDTO.yaml'
      '400':
        description: The specified event id is invalid.
        content:
          application/json:
            schema:
              $ref: './datatypes/errors/Error400.yaml'
      '401':
        description: Not authorizated.
        content:
          application/json:
            schema:
              $ref: './datatypes/errors/Error401.yaml'
      '403':
        description: User doen't have the needed rights
        content:
          application/json:
            schema:
              $ref: './datatypes/errors/Error403.yaml'
      '404':
        description: A event with the specified ID was not found.
        content:
          application/json:
            schema:
              $ref: './datatypes/errors/Error404.yaml'

  delete:
    summary: Deletes an event
    tags:
      - event
    parameters:
      - name: eventid
        in: path
        required: true
        description: id of the event
        schema:
          type: string
    responses:
      '200':
        description: A JSON object of an event
        content:
          application/json:
            schema:
              type: string
      '400':
        description: The specified event id is invalid.
        content:
          application/json:
            schema:
              $ref: './datatypes/errors/Error400.yaml'
      '401':
        description: Not authorizated.
        content:
          application/json:
            schema:
              $ref: './datatypes/errors/Error401.yaml'
      '403':
        description: User doen't have the needed rights
        content:
          application/json:
            schema:
              $ref: './datatypes/errors/Error403.yaml'
      '404':
        description: A event with the specified ID was not found.
        content:
          application/json:
            schema:
              $ref: './datatypes/errors/Error404.yaml'

eventByLocationOperations:
  get:
    summary: Returns all events from a location ordered by their distance, their start date and their name.
    tags:
      - event
    parameters:
      - in: query
        name: skip
        optional: true
        schema:
          type: integer
        description: The numbers of items to return
      - in: query
        name: take
        optional: true
        schema:
          type: integer
        description: The number of items to skip before starting to collect the result set
    requestBody:
      content:
        application/json:
          schema:
            $ref: './datatypes/Geolocation.yaml'
    responses:
      '200':
        description: A JSON array of events
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: './datatypes/EventDTO.yaml'
      '400':
        description: Bad request.
        content:
          application/json:
            schema:
              $ref: './datatypes/errors/Error400.yaml'
      '401':
        description: Not authorizated.
        content:
          application/json:
            schema:
              $ref: './datatypes/errors/Error401.yaml'
