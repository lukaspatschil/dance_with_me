eventOperations:
  get:
    description: Returns all events ordered by their start date and their name. If a location is given, the data is ordered by their distance, start date and their name.
    tags:
      - event
    parameters:
      - in: query
        name: skip
        schema:
          type: integer
          default: 0
        description: The number of items to skip before starting to collect the result set
        required: false
      - in: query
        name: take
        schema:
          type: integer
          default: 50
        description: The number of items to fetch from the result set
        required: false
      - in: longitude
        name: longitude
        schema:
          type: number
        description: longitude of the current position
        required: false
      - in: latitude
        name: latitude
        schema:
          type: number
        description: latitude of the current position
        required: false
      - in: radius
        name: radius
        schema: 
          type: integer
          default: 100
        description: distance from the current location in which is searched
        required: false
      - in: startDate
        name: startDate
        schema: 
          type: string
          default: current timestamp
        description: timestamps of the events after which they should take place
        required: false
    responses:
      '200':
        description: A JSON array of events
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: './datatypes/EventDTO.yaml'
      '400':
        description: Bad request.
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  enum:
                    - invalid_longitude
                    - invalid_latitude
                    - invalid_radius
              required:
                - error
      '401':
        $ref: './errors.yaml#/unauthorizedResponse'
  post:
    summary: Adds an event
    tags:
      - event
    requestBody:
      content:
        application/json:
          schema:
            $ref: './datatypes/CreateEventDTO.yaml'
    responses:
      '201':
        description: A JSON object of an event
        content:
          application/json:
            schema:
              $ref: './datatypes/EventDTO.yaml'
      '400':
        description: Bad request.
        content:
          application/json:
            schema:
              oneOf:
                - $ref: './errors.yaml#/invalidFieldsSchema'
      '401':
        $ref: './errors.yaml#/unauthorizedResponse'
      '403':
        $ref: '#/forbiddenResponse'

eventParticipateOperations:
  post: 
    description: participate at an event
    tags: 
    - participation
    parameters:
    - name: eventid
      in: path
      required: true
      description: id of the event
      schema:
        type: string
    responses:
      '204':
        description: No Content
      '401':
        $ref: './errors.yaml#/unauthorizedResponse'
      '404':
        $ref: '#/eventNotFoundResponse'
      '409':
        $ref: '#/AlreadyParticipatedResponse'
  delete:
    description: remove participation at an event
    tags: 
    - participation
    parameters:
    - name: eventid
      in: path
      required: true
      description: id of the event
      schema:
        type: string
    responses:
      '204':
        description: No Content
      '401':
        $ref: './errors.yaml#/unauthorizedResponse'
      '404':
        $ref: '#/eventNotFoundResponse'
      '409':
        $ref: '#/NotYetParticipatedResponse'

eventIdOperations:
  get:
    summary: Returns a single event
    tags:
      - event
    parameters:
      - name: eventid
        in: path
        required: true
        description: id of the event
        schema:
          type: string
    responses:
      '200':
        description: A JSON object of an event
        content:
          application/json:
            schema:
              $ref: './datatypes/EventDTO.yaml'
      '401':
        $ref: './errors.yaml#/unauthorizedResponse'
      '403':
        $ref: '#/forbiddenResponse'
      '404':
        $ref: '#/eventNotFoundResponse'

  put:
    summary: Replace an event
    tags:
      - event
    parameters:
      - name: eventid
        in: path
        required: true
        description: id of the event
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            $ref: './datatypes/CreateEventDTO.yaml'
    responses:
      '200':
        description: A JSON object of an event
        content:
          application/json:
            schema:
              $ref: './datatypes/EventDTO.yaml'
      '400':
        description: Bad request.
        content:
          application/json:
            schema:
              oneOf:
                - $ref: './errors.yaml#/invalidFieldsSchema'
      '401':
        $ref: './errors.yaml#/unauthorizedResponse'
      '403':
        $ref: '#/forbiddenResponse'
      '404':
        $ref: '#/eventNotFoundResponse'

  delete:
    summary: Deletes an event
    tags:
      - event
    parameters:
      - name: eventid
        in: path
        required: true
        description: id of the event
        schema:
          type: string
    responses:
      '200':
        description: A JSON object of an event
        content:
          application/json:
            schema:
              type: string
      '401':
        $ref: './errors.yaml#/unauthorizedResponse'
      '403':
        $ref: '#/forbiddenResponse'
      '404':
        $ref: '#/eventNotFoundResponse'

eventNotFoundResponse:
  description: The event with the specified ID was not found.
  content:
    application/json:
      schema:
        type: object
        properties:
          error:
            type: string
            enum:
              - not_found
        required:
          - error

forbiddenResponse:
  description: Missing permission to access/change/delete this event.
  content:
    application/json:
      schema:
        type: object
        properties:
          error:
            type: string
            enum:
              - missing_permission
        required:
          - error

AlreadyParticipatedResponse:
  description: Conflict at changeing the patricipation status of an event. User already declared participation to the event.
  content:
    application/json:
      schema:
        type: object
        properties:
          error:
            type: string
            enum:
              - already_participated
        required:
          - error

NotYetParticipatedResponse:
  description: Conflict at changeing the patricipation status of an event. User did not yet declare participation to the event.
  content:
    application/json:
      schema:
        type: object
        properties:
          error:
            type: string
            enum:
              - not_yet_participated
        required:
          - error
