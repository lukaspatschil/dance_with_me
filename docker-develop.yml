version: "3.9"
services:
  dev-server:
    build:
      context: .
      target: development
      dockerfile: ./backend/Dockerfile
    hostname: server
    volumes:
      - ./backend:/usr/src/app/backend
      - /usr/src/app/node_modules
    ports:
      - 3000:3000
    depends_on:
      - "dev-database"
    env_file:
      - ./develop.env
      - ./secrets.env
    networks:
      - dev-internal

  dev-webclient:
    build:
      context: .
      target: development
      dockerfile: ./frontend/Dockerfile
    volumes:
      - ./frontend:/usr/src/app/frontend
      - /usr/src/app/node_modules
    ports:
      - 8080:4200
    networks:
      - dev-internal

  dev-database:
    image: mongo:5.0.4
    environment:
      MONGO_INITDB_DATABASE: danceWithMe
    ports:
      - 27017:27017
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - dev-internal
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo dev-database:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://dev-database:27017/
    networks:
      - dev-internal

  data-generator:
    build:
      context: .
      dockerfile: ./generator/Dockerfile
    depends_on:
      dev-database:
        condition: service_healthy
      dev-neo4j:
        condition: service_healthy
    networks:
      - dev-internal
    environment:
      MONGO_URL: mongodb://dev-database:27017/
      NEO4J_USERNAME: neo4j
      NEO4J_PASSWORD: dancewithme
      NEO4J_ENDPOINT: bolt://dev-neo4j:7687

  minio-server:
    container_name: minio-server
    hostname: minio-server
    image: minio/minio:RELEASE.2022-05-19T18-20-59Z
    networks:
      - dev-internal
    ports:
      - 9000:9000
    volumes:
      - minio-data:/data
    env_file:
      - ./develop.env
    command: server /data
    labels:
      - "traefik.enable=false"
    restart: always

  dev-neo4j:
    image: neo4j:4.4.6
    networks:
      - dev-internal
    ports:
      - '7474:7474'
      - '7687:7687'
    volumes:
      - neo4j-data:/data
    env_file:
      - ./develop.env
    restart: always
    healthcheck:
      test: wget http://localhost:7474 || exit 1
      interval: 1s
      timeout: 10s
      retries: 20
      start_period: 3s

  dev-meiliseach:
    image: getmeili/meilisearch:v0.27.1
    ports:
      - '7700:7700'
    volumes:
      - meilisearch-data:/data

volumes:
  mongodb_data_container:
  minio-data:
  neo4j-data:
  meilisearch-data:

networks:
  dev-internal:
    driver: bridge
